name: Deploy Pipeline

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
      - '**.tfvars'
      - 'terraform/**'
      - '.github/workflows/deployment.yml' # This workflow file
      - 'terraform-oidc.yml' # CloudFormation template

env:
  AWS_REGION: 'us-east-2'
  HCP_TERRAFORM_ORG: enpicie
  HCP_TERRAFORM_WORKSPACE: aws-terraform-oidc-config
  HCP_TERRAFORM_PROJECT_ID: prj-pAh9kkvyHMNEjs4z # ID of project AWS-Infrastructure

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout and tag creation

jobs:
  DeployCloudFormationTemplate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CloudFormation template
        run: |
          aws cloudformation deploy \
            --template-file ./terraform-oidc.yml \
            --stack-name HCP-Terraform-OIDC-Stack \
            --capabilities CAPABILITY_NAMED_IAM

  ApplyRoleToHCPTerraform:
    runs-on: ubuntu-latest

    steps:
      - name: Setup HCP Terraform Workspace
        uses: chzylee/action-workflow-hcp-terraform-workspace-setup@v1.0.0
        with:
          tfc_organization: ${{ env.HCP_TERRAFORM_ORG }}
          tfc_workspace: ${{ env.HCP_TERRAFORM_WORKSPACE }}
          tfc_project: ${{ env.HCP_TERRAFORM_PROJECT_ID }}
          tfc_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform and Deploy via HCP Terraform
        uses: chzylee/action-workflow-hcp-terraform-run@v1.1.1
        with:
          terraform_directory: ./terraform # Action run from context of the repository root
          tfc_organization: ${{ env.HCP_TERRAFORM_ORG }}
          tfc_workspace: ${{ env.HCP_TERRAFORM_WORKSPACE }}
          tfc_token: ${{ secrets.TF_API_TOKEN }}

      - name: Push Org Variable for Variable Set to Owning Org
        env:
          GH_TOKEN: ${{ secrets.GH_ACTIONS_PAT }}
          VAR_NAME: AWS_TF_ROLE_VARSET_IAM
          VAR_VALUE: 'AWS HCP TF OIDC Role - IAM Perms'
          ORG_NAME: ${{ github.repository_owner }}
        run: |
          echo "Setting org-level variable '$VAR_NAME' in org '$ORG_NAME'..."
          gh variable set "$VAR_NAME" \
            --org "$ORG_NAME" \
            --body "$VAR_VALUE" \
            --visibility all
